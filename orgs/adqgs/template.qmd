---
title: "An√°lise de Dados para Qualifica√ß√£o em Gest√µes na Sa√∫de, Educa√ß√£o e Inova√ß√£o"  
subtitle: "Este documento √© um material inicial para o curso de An√°lise de Dados com R oferecido pelo <a href='https://ead.icepi.es.gov.br/icepi/login/index.php'>ICEPi</a>"  
format:
  adqgs-html: 
    logo: "logo.png"                             # Opcional. Pasta para o logo mostrado acima do t√≠tulo
    github-repo: "https://www.github.com"        # Opcional. Adiciona github no canto superior direito
    primary-color: "##1F5CA9"                    # Hex para azul ICEPi
    self-contained: true
    is-particlejs-enabled: true                  # Opcional: mostra o efeito das particulas interativas
author: Bragatte, Isaac, Vital, Bertolde
credit: Bragatte
date: 2024-10-17
---
    
    
## Introdu√ß√£o

Este curso de introdu√ß√£o √† an√°lise de dados com R √© uma excelente oportunidade para aprender as bases da linguagem R e como aplic√°-la na an√°lise de dados. O objetivo √© transformar seu c√≥digo e ideias em insights pr√°ticos de forma clara e eficiente.

Neste material, abordaremos como utilizar o R e seus alguns pacotes para a manipula√ß√£o de dados, visualiza√ß√£o e gera√ß√£o de relat√≥rios. Ao longo do curso, voc√™ se familiarizar√° com as principais bibliotecas e aprender√° a criar gr√°ficos e relat√≥rios interativos para comunicar suas descobertas de maneira impactante.


## Carregar Pacotes

Certifique-se de carregar **todos os seus pacotes** no in√≠cio do documento, para clareza e consist√™ncia.

Note que os trechos de c√≥digo s√£o ocultos por padr√£o. Voc√™ pode ajustar esse comportamento com a op√ß√£o `code-fold` no cabe√ßalho YAML do documento.


```{r, warning=F, message=F}
library(tidyverse) 
library(hrbrthemes) # <1>
library(viridis) # <2>
library(ggiraph)
library(patchwork) 
library(sf)
```

1. este pacote fornece meu tema favorito do `ggplot2`: `theme_ipsum()`
2. porque eu estava muito pregui√ßoso para procurar algo melhor no [R Color Finder](https://r-graph-gallery.com/color-palette-finder)!
    
:::{.callout}
Por falar nisso, voc√™ deve abrir o trecho de c√≥digo dobrado acima. ‚¨ÜÔ∏è
H√° uma pequena surpresa incr√≠vel no lado direito dele.
:::
    
    
## Principais Funcionalidades

### Tipografia

Voc√™ deve ter notado que a tipografia difere do estilo padr√£o do Quarto. Tamb√©m adicionei __espa√ßamento extra__ acima de cada t√≠tulo para melhor legibilidade, e sublinhei-os para dar mais destaque aos cabe√ßalhos.

### Cabe√ßalho e Rodap√©

O cabe√ßalho √© totalmente personalizado, incluindo um canto divertido do GitHub que vincula ao c√≥digo original. Al√©m disso, h√° part√≠culas animadas para um toque de descontra√ß√£o. Role para baixo e voc√™ encontrar√° um rodap√© personalizado tamb√©m.

<hr/>
    
Para uma lista completa de funcionalidades e verificar o criador original deste relat√≥rio, [visite a documenta√ß√£o - aten√ß√£o material em ingl√™s](https://www.productive-r-workflow.com/r/bonus/lumo-quarto-template)!

### Mapa Interativo

Ah, e j√° que estamos aqui, sabia que voc√™ pode incluir facilmente um mapa interativo em largura total com o `leaflet` em um documento Quarto? üòç

Vers√£o simples com o local de nascimento do R.
```{r}
#| column: screen
#| out-width: 100%

# Carregar a biblioteca.
library(leaflet)

# Fazer um mapa com zoom interativo e marcadores de cores diferentes
leaflet() %>%
  addTiles() %>% # Adicionar tiles padr√£o do OpenStreetMap
  addMarkers(lng = 174.768, lat = -36.852, popup = "O local de nascimento do R")
```

Ou convido voc√™s a usarem o zoom para dentro Brasil encontrar no Espirito Santo duas localidades comentados em nosso encontro s√≠ncrono.
```{r}
#| column: screen
#| out-width: 100%

# Carregar a biblioteca.
library(leaflet)

# Fazer um mapa com zoom interativo e marcadores de cores diferentes
leaflet() %>%
  addTiles() %>% # Adicionar tiles padr√£o do OpenStreetMap
  setView(lng = -40.3381, lat = -20.3222, zoom = 8) %>% # Definir o centro do mapa e o n√≠vel de zoom
  addMarkers(lng = -40.3381, lat = -20.3222, popup = "N√£o √© o mar, √© perto da pol√≠cia federal de Vit√≥ria", 
             icon = makeIcon(iconUrl = "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-red.png")) %>%
  addMarkers(lng = -40.5439, lat = -19.4111, popup = "Maril√¢ndia, cidade mais especial do mundo na opini√£o do Bertolde", 
             icon = makeIcon(iconUrl = "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-green.png"))
```


## Como Funciona

Ao longo do curso, voc√™ aprender√° a utilizar o R para explorar e analisar dados de diferentes fontes. Utilizaremos bibliotecas como `tidyverse` para manipula√ß√£o de dados, `ggplot2` para criar visualiza√ß√µes e `sf` para lidar com dados espaciais.

Este material tamb√©m mostrar√° como construir relat√≥rios reproduz√≠veis que podem ser facilmente compartilhados com colegas e superiores, ajudando na tomada de decis√µes com base em dados concretos.

<hr/>

```{r}
library(DT)
data(iris)

# Fazendo uma tabela interativa
datatable(iris, filter = "top")
```

    
Al√©m disso, exploraremos gr√°ficos interativos com o [ggiraph](https://r-graph-gallery.com/package/ggiraph.html). Experimente passar o mouse sobre um dos gr√°ficos abaixo e veja a interatividade em a√ß√£o!
    
    
```{r, fig.cap="Figura: Louca de especial com o pacote `ggiraph`"}

# Read the full world map
world_sf <- read_sf("https://raw.githubusercontent.com/holtzy/R-graph-gallery/master/DATA/world.geojson")
world_sf <- world_sf %>%
  filter(!name %in% c("Antarctica", "Greenland"))

# Create a sample dataset
happiness_data <- data.frame(
  Country = c(
    "France", "Germany", "United Kingdom",
    "Japan", "China", "Vietnam", "Brazil",
    "United States of America", "Canada", "Mexico"
  ),
  Continent = c(
    "Europe", "Europe", "Europe",
    "Asia", "Asia", "Asia", "South America",  # Corrija aqui se necess√°rio
    "North America", "North America", "North America"
  ),
  Happiness_Score = rnorm(mean = 30, sd = 20, n = 10),
  GDP_per_capita = rnorm(mean = 30, sd = 20, n = 10),
  Social_support = rnorm(mean = 30, sd = 20, n = 10),
  Healthy_life_expectancy = rnorm(mean = 30, sd = 20, n = 10)
)


# Join the happiness data with the full world map
world_sf <- world_sf %>%
  left_join(happiness_data, by = c("name" = "Country"))


# Create the first chart (Scatter plot)
p1 <- ggplot(world_sf, aes(
  GDP_per_capita,
  Happiness_Score,
  tooltip = name,
  data_id = Continent,
  color = Continent
)) +
  geom_point_interactive(data = filter(world_sf, !is.na(Happiness_Score)), size = 4) +
  theme_minimal() +
  theme(
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    legend.position = "none"
  )

# Create the second chart (Bar plot)
p2 <- ggplot(world_sf, aes(
  x = reorder(name, Happiness_Score),
  y = Happiness_Score,
  tooltip = name,
  data_id = Continent,
  fill = Continent
)) +
  geom_col_interactive(data = filter(world_sf, !is.na(Happiness_Score))) +
  coord_flip() +
  theme_minimal() +
  theme(
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    legend.position = "none"
  )

# Create the third chart (choropleth)
p3 <- ggplot() +
  geom_sf(data = world_sf, fill = "lightgrey", color = "lightgrey") +
  geom_sf_interactive(
    data = filter(world_sf, !is.na(Happiness_Score)),
    aes(fill = Continent, tooltip = name, data_id = Continent)
  ) +
  coord_sf(crs = st_crs(3857)) +
  theme_void() +
  theme(
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    legend.position = "none"
  )

# Combine the plots
combined_plot <- (p1 + p2) / p3 + plot_layout(heights = c(1, 2))

# Create the interactive plot
interactive_plot <- girafe(ggobj = combined_plot)
interactive_plot <- girafe_options(
  interactive_plot,
  opts_hover(css = "fill:red;stroke:black;")
)

interactive_plot
```


## Uma se√ß√£o cinza

::: {.cell .page-columns .page-full .column-screen .grey-section}
√â sempre bom ter uma se√ß√£o cinza. Faz o documento respirar um pouco. Isto requer um pouquinho mais de copia e cola, n√£o precisamos falar disso agora mas o exemplo esta aqui [`Reposit√≥rio de exemplo`]() para garantir que voc√™ possa fazer se√ß√µes como esta muito facilmente. 

Vamos usar este espa√ßo para um exemplo "matematicamente musical" (quem foi no primeiro encontro s√≠ncrono pegou a refer√™ncia):

$$
x = \frac{-b \pm \sqrt{b^2 - 4ac}}{2a}
$$
:::

## Outras dicas de Quarto e Rmakdown

Por exemplo, se voc√™ est√° criando v√°rios gr√°ficos, cada um destacando diferentes aspectos do seu conjunto de dados, considere usar *pills* = *:::* para organiz√°-los!

::: {.panel-tabset .nav-pills}

## Scatterplot


Este √© um velho e bom gr√°fico de dispers√£o do conjunto de dados iris (bi√≥logos adoram, declaro vi√©s). Se voc√™ quiser aprender mais sobre como fazer gr√°ficos no R, segue um exemplo de [galeria de gr√°ficos R](https://www.r-graph-gallery.com)!

```{r, fig.align='center'}
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width, color=Species)) + 
    geom_point() +
    theme_ipsum()
```

## Boxplot


Voc√™ tamb√©m pode fazer um [boxplot](https://r-graph-gallery.com/89-box-and-scatter-plot-with-ggplot2.html), mas por favor, n√£o esconda a distribui√ß√£o subjacente!üòã

```{r, fig.align='center'}
# create a dataset
data <- data.frame(
  name=c( rep("A",500), rep("B",500), rep("B",500), rep("C",20), rep('D', 100)  ),
  value=c( rnorm(500, 10, 5), rnorm(500, 13, 1), rnorm(500, 18, 1), rnorm(20, 25, 4), rnorm(100, 12, 1) )
)

# Plot
data %>%
  ggplot( aes(x=name, y=value, fill=name)) +
    geom_boxplot() +
    scale_fill_viridis(discrete = TRUE, alpha=0.6) +
    theme_ipsum() +
    theme(
      legend.position="none",
      plot.title = element_text(size=11)
    ) +
    ggtitle("O gr√°fico de boxplot esconde a distribui√ß√£o das amostras") +
    xlab("")
```

## Jittering


Veja o que esta acontecendo agora que os pontos de dados individuais s√£o vis√≠veis! Seria uma pena perder isso.

```{r, fig.align='center'}
data %>%
  ggplot( aes(x=name, y=value, fill=name)) +
    geom_boxplot() +
    scale_fill_viridis(discrete = TRUE, alpha=0.6) +
    geom_jitter(color="black", size=0.4, alpha=0.9) +
    theme_ipsum() +
    theme(
      legend.position="none",
      plot.title = element_text(size=11)
    ) +
    ggtitle("Um boxplot com gr√°fico de jitter") +
    xlab("")
```


:::

## Agradecimentos
Queremos agradecer a voc√™s por juntarem-se conosco nesta jornada de aprendizado. Espero que voc√™s aproveitem o curso e que o mesmo ajude a todos nos mais diferentes desafios a serem mais eficientes e produtivos.
